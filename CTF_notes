# general steps when starting a CTF #

1) Scan Ports and Versions (NMAP)
    - Create a file to store the nmap scan
    - Create a file to store the notes about the scan, so as to map the network or possible attack paths on the machine(s)
    //OPTIONS (you can scan a whole network as well)
        -p == filter which ports to scan: ex -p 1000-1500 | -p- to scan all ports
        -sO (test it, john hammond uses it)
        -sV == service/version info
        -sC == default script? not sure what it does tbh
        -O == OS version detection
        -oN [output filename] == sends the scan info into a file we specify with a normal output(I could choose XML)
        -A == LOUD&AGRESSIVE, all in one: OS detection, Version detection, Script scanning and Traceroute 
        -v OR -vv == HUUUGE info, use -vv to display even private ssh keys & encryption methods: verbose
        --script= to specify a script from the nmap library
        -T5 == increases speed of scan: 5 threads(0 - 5)
        --min-rate 1000(+) == increases speed of scan (not sure of the difference between t4 and min-rate)
        -sn [ip range] == used to sweep the network for alive hosts
        --script=[option] == used to scan for a specific thing (vuln, safe, intrusive, exploit, auth, brute, discovery) | http-put to upload files to a web server with api
        -Pn == scans every host, even if they have icmp disabled. TAKES A TON OF TIME THO
        -f == fragments the packets, making it harder to be detected
        --badsum == used to potentially scan for firewall/IDS in the network/host



    Attacking an SMB server
        - use enum4linux to scan the server: ex enum4linux -a [IP]
        - this will give us information about the SMB server: shares, domain/workgroup name, username, OS version, etc...
        - try to connect to the interesting shares: ex smbclient //10.10.10.2/profiles -U [name] -p [port]
            - use "Anonymous" as username and a blank password to try to connect, it might be enabled by default
        - once inside a share, use cd, get, put, pwd, mget and mput to navigate and download/upload files
        



    Getting a private ssh key of the target(you could add your own pub key, but that generaly doesn't work)
        - allways use chmod 600 [key_name], otherwise it can be seen by scans and you won't be able to use it to connect to a machine via ssh
        - ssh -i [username]@[path_to_key] [IP]
            - if no password is needed, it should work
        

















































































