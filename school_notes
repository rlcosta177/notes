----------------------------------------- Passwords & Contas --------------------------------
eMail pass:
Super@Passw0rd |ou| Passw0rd

aws login:
rodrigolimacosta@enta.pt

wifi pass:
ENTAWiFi

adm pass:
&9va@ENTA

credenciais remmina:
ec2-user
Passw0rd

https://gist.githubusercontent.com/jdmedeiros/0148fcfc648b3759c16fb3167f0321bb/raw/2885baf0755d0b4921f3f28979dd41183a64dd83/netplan

--------------------------------------------- Furutre Studies(Udemy&Stuff) --------------------------
FAZER A RECUPERAÇÃO DE SWITCH CONFIG(remover o secret se esquecer-me and shit)
https://www.youtube.com/watch?v=PCpnRqKCWCQ 
do aws certificate

1) Terraform [Have some knowlage already]
2) Docker
3) Kubernetes
4) Wazuh [D]
5) New Relic
6) Assembly [To Do easter]
7) kistmet&&aricrack-ng -> wifihacking
8) Metasploit [To Do easter]
10) PagerDuty -> emails stuff?
11) Mess around with bluetooth devices
12) uptimerobot -> monitors website uptime for free

usb wifi adapter-> buy
GFI LanGuard -> scan public ips
irssi -> test some chats
socat
port forwarding linux terminal(using ssh) - https://www.tecmint.com/create-ssh-tunneling-port-forwarding-in-linux/
busybox

toggle track org para dar track das tasks que faço no dia para n me lixar no trabalho
nessus
netcat
awk linux command
grep linux command


!Grafana -> Usado para fazer baseline. Usar prometheus com grafana(não sei o que faz tbh lmao)
Circleci -> CI/CD thingy

REMnux
Jenkins (ci?)
travis ci
gitlab ci

splunk
datadog
leetcode
Ansible -> Automação de instalação de programas e sudo apt updates n shit
Puppet -> same as ansible I believe
https://hash-file.online/ <- hashing checksum website
indeed.com -> Procurar trabalho/Estágio
stepstone.com -> Procurar trabalho/Estágio
totaljobs.com -> Procurar trabalho/Estágio
Goteleport -> 
teleport
nvd vulnerability
default password lists(routers n shit)
assinar documento digital -> https://www.autenticacao.gov.pt/cmd-assinatura
como verificar uma assinatura digital
chave digital na riac
https://www.manageengine.com/products/netflow/nbar-monitor.html


Connect to the serial port of an aws instance:
aws ec2-instance-connect send-serial-console-ssh-public-key \
    --instance-id i-0caea2bf6687d5bd1 \
    --serial-port 0 \
    --ssh-public-key file://DanMed2219.pub \
    --region us-east-1 --profile vocareum

------------------------------------------- Teste de DNS, Sites(IIS), FTP, User Management, VPC, Routing and Remote Access -----------------------------------------------

 Aplicações:
    - Server Manager
    - Power Shell
    - CMD
    - https://docs.google.com/document/d/1Ka1fgUXJQ6Sk6krxNvmB9CZHv_leKU1W_HCGRHebTBg/edit#heading=h.cdb5rberw5mr


AWS: 
   Criar uma default VPC
   Criar uma nova subnet na mesma availability zone que a east-1a(ou o que o prof escolher) e dar um nome(ex: windows11-network). Nomear a network já existente de default para saber qual é(ex: default east-1a)
   Ir ao default security group e adicionar -> All Trafic para MY IP e para a gama de ips da VPC(ex: 172.31.0.0/16)
   Criar o Windows Server na subnet default(east-1a) a e meter Auto-assign public IP disabled

   Na Network Interface 1 -> colocar um IP no Primary IP que esteja na mesma gama de IPs que a default east-1a(ex: 172.31.16.100). Este vai ser o IP usado pelo WinServer para dar internet aos windows11
   Adicionar uma nova Network Interface e colocar um IP no Primary IP(ex: 172.31.96.100 | Este IP é relacionado á subnet criada -> windows-network)
   Escolher a subnet windows-network como Subnet(subnet criada por mim)
      ! Subnet windows-network(.96) é a private network usada pelos windows11 | Subnet default east-1a(.16) é a private network usada pelo windows Server para permitir aos windows11’s acesso á internet
  
   Criar um Elastic IP e associar á Network Interface default east-1a do Windows Server (ex: 172.31.16.0/20)
   Selecionar o Windows Server -> actions -> Networking -> Change Source/Destination Check -> Stop(é para marcar)


1 Instalar Active Directory Domain Services
  Promover a Domain and shit


2 Alterar o nome dos WinServer:
    This PC -> Propriedades -> Alterar o nome -> Reiniciar


2.1 Criar o Windows11 A e B(usar AMI do prof):
    Escolher a subnet 'windows-network', a que foi criada por mim(172.31.96.0/20)
    Escolher o default security group


2.2 Promote Server to Domain Controller:
    Add new forest -> ciber.com -> Pass: Passw0rd -> next em tudo e Install. O Win Server vai fechar, abre algum tempo depois.


2.3 Remote connection para entrar no Windows11 A com ec2-user(No Windows Server):
    Usar o IP privado do win11 A

2.6 Alterar o nome dos Windows11:
    This PC -> Propriedades -> Alterar o nome -> Reiniciar

2.7 Instalar o servidor de DHCP, Remote Access e Web Server IIS no Server Manager:
     FTP Server -> Next -> Routing -> Next -> Install
     Complete DHCP configuration -> next -> commit

2.8 (WINDOWS SERVER) Alterar o IP fixo, Subnet mask, Default gateway(no IPv4):
     - Placa 1:
        - IP, Subnet mak e Default gateway
     - Placa 2(ip maior normalmente):
        - IP e Subnet mask. (deixar default gateway em branco)
     Mudar o IP das Network Interfaces do Windows Server:
       Alterar o IPv4 da Network 3 e 4 tendo em conta o que diz no CMD(ipconfig /all)

2.9 Adicionar as maquinas ao Dominio(ex: ciber.com):
     - Propriedades de This PC -> Advanced settings -> Change -> ciber.com


3 configuração de DHCP server(Windows Server):
       Botão direito em IPv4 -> New Scope -> Nome qualquer(ex: Windows Private Network) -> Start e End IP addr são á nossa escolha (ex:172.31.96.128 - 172.31.96.191) ->
       mask á escolha(ex: /20 ou 255.255.240.0) -> next -> next -> next -> Private IP do Elastic IP do Windows Server(Dar ADD) -> next.....

3.5 Alterar IP fixo do windows11 A:
    Ir ao IPv4(advanced network settings) -> Propriedades -> IPv4:
       - IP address -> 172.31.96.101 | O IP vai ser igual(ultimo byte é 101 em vez de 100) ao Private IP address da network interface do windows-network(dar nomes ás network interfaces.
         Posso ver qual é qual pela subnet associada)
       - Subnet Mask -> Depende da mask da subnet usada()
       - Default Gateway -> É o IP privado do Elastic IP do WinServer. É este IP que server de Rooter para os windows11's acederem á net
       - Preferred DNS server -> 172.31.96.100 (IP Elastico do WinServer para ser usado como DNS server)
     Ao finalizar, vou perder a conecção, tentar conecção depois de dar stop e start á maquina no AWS, com o IP fixo que foi dado(ex: 172.31.96.101)
usei: 172.31.121.101 | 255.255.255.0 | 172.31.16.100 | 172.31.121.100

4 Criar pastas root para os sites NO WINDOWS SERVER:
     - Disco C:/ -> Criar novas pastas dentro do disco C com nomes tipo: oriental.pt, central.pt... (NÃO INCLUIR WWW)
     - Criar ficheiros ex: index.html e escrever alguma coisa dentro

 4.5 Criar sites (IIS) NO WINDOWS SERVER:
    IIS Manager:
      - Botão direito em sites -> Add Website -> Colocar o www.site.pt no 'site name' e 'host name'. Escolher os physical path

 5 Criação de Certificado:
    Selecionar o servidor(2ª opção):
        Self-Signed Certificate:
            - nome tipo: www.oriental.pt
	    - Web Hosting

 6 Associar um Certificado a um site:
    - Escolher um site -> Bindings -> Add -> escolher https -> hostname(ex: www.central.pt) -> SSL Certificate: escolhe o certificado criado

 7 Criar um site FTP(OPCIONAL?):
   - Botão direito em sites -> Add FTP site -> ex: www.oriental.pt e physical path(pasta no disco C:/) -> Enable Virtual Host Name: www.oriental.pt | No SSL -> Basic -> Allow Access to all users ->
     Permissions necessárias -> Finish
   - (Useless I think)Podemos também adicionar uma binding de ftp a um site já existente.

  8 Criar Groupos e Utilizadores:
    Active directory users and computers:
       - Em ciber.com(2ª pasta) -> botão direito -> new Organizational Unit
            - Dentro da Organizational Unit:
                 - Criar grupos com o nome desejado 
                    - Criar utilizadores e acossia-los aos seus respectivos grupos

  8.5 Manage IP addresses no AWS(para aceder às maquinas com o IP fixo que foi introduzido no ponto 2.8):
    Escolher um dos windows11 -> actions -> Networking -> Manage IP addresses -> Expandir a network interface -> Assign new IP address(ex: 172.31.96.101 <- IP fixo que demos assign anteriormente) -> Save

  8.6 Conectar ao Windows11-A a partir do Windows Server usando o novo IP(ex: 172.31.96.101):
    Se não funcionar, verifica se no IPv4 o IP, default gateway ou DNS fixo estão corretos.
    Verificar se no AWS, o Change Source/Destination Check tem o 'Stop' marcado.

  9 Alterar o dominio do Windows 11:
      - Ir a propriedades de 'Este PC' -> Domain or Workgroup -> Change -> Domain: ciber.com(o nome do servidor DNS está no DNS de Server Manager do Windows Server)
      - Se der erro é porque a maquina não está a usar o DNS do Windows Server(Ir ao IPv4 e alterar para o IP privado do Win Server).


  10 Para entrar na maquina com remmina e contas diferentes(ex: maria):
       Dentro do windows11(usando ec2-user remotamente a partir do Windows Server):
          Propriedades de 'This PC'  -> Domain or Workgroup -> Remote -> Add -> nome do utilizador -> Usar Administrator - Passw0rd -> Restart -> Editar as credenciais na remmina(só o user) -> entrar 

  ! Se as maquinas estão em availability zones diferentes, o processo é o mesmo, apenas temos que criar uma inbound rule no windows server para o windows11 poder aceder e pingar o Windows Server(acho eu)

   11 Roaming Profiles:
        (NO WINDOWS SERVER)
        Criar uma pasta no disco C:\ -> propriedades -> Share com todos -> Copiar o Network Path(ex: \\EC2AMAZ-0DRURUB\utilizadores\):
           Active Directory Users and Computers -> Pasta dos users:
              - Propriedades do user -> profile -> Colar o network path no Profile path \\EC2AMAZ-0DRURUB\utilizadores\%username%\Profile e no Connect: \\EC2AMAZ-0DRURUB\utilizadores\%username%

  12 Instalar WireShark no Windows Server:
     Wireshark vai ser usado para verificar se os windows11 estão a tentar comunicar com o windows server para aceder a sites
     Usar ip.addr = (ip que o cliente está a pingar) para verificar se os pings estão a ser direcionados ao windows server
     Abrir Ethernet 3 e 4 ao mesmo tempo para ver os pings todos!

  
  13 Routing and Remote Access(permitir os windows11 acederem á net)(tools):
     Botão direito no WINSRV(local) -> Configure and Enable... -> Custom Configuration -> NAT & LAN Routing -> Start Service
     Abrir o WINSRV(local) -> Abrir IPv4 -> no NAT, botão direito -> New Interface -> Adicionar uma de cada vez(apenas a 3 e 4)
     NETWORK INTERFACE 3 -> Subnet Default(ex: 172.31.16.0) <- IPv4          | Public Interface e Enable NAT
     NETWORK INTERFACE 4 -> Subnet criada por mim(ex: 172.31.96.100) <- IPv4 | Private Interface

     Se a public interface(network interface 3) não tem nenhum mapping, então o problema deve ser da cena do aws -> change source/destination check -> tem que tar stopped(marcado),
     Se não for esse o problema, vê se o IP, Default Gateway e DNS estão certos no Windows11-A

     13.1 Usar portas 3390 e 3391 para os windows11 acederem á net(NO WINDOWS SERVER):
	     1 - (RDP para WIN11A)Ir ao Routing and Remote Access -> NAT -> botão direito no Ethernet3() -> Proprieties -> Services and Ports -> Add -> Descrição que eu queira(RDPwin11A) ->  
		 Incoming Port: 3390 -> Private Address: é o IP fixo do windows11 A(ex: 172.31.96.101) -> Outgoing Port: 3389
             2 - (RDP para WIN11B)Ainda no Ethernet 3 -> Propriedades -> Services and Ports -> Add -> ex: RDPwin11B -> Incoming Port: 3391 -> Private Address: É o IP fixo do Windows11B(ex: 172.31.96.102)
                 -> Outgoing Port: 3389
 	     3 - Ir ao remmina e colocar o IP publico do Windows Server com a porta á frente(ex: 54.213.32.124:3390 e 54.213.32.124:3391)

  14 DNS: 
     Forward Lookup Zone:
     - Botão direito -> new zone -> nome do site(ex: oriental.pt (sem www)) -> next...
     - Ao criar um ficheiro Type (A), usar o IP privado da Ethernet 4(subnet criada por mim(windows-network))(ex: 172.31.96.100) <- IP do windows server que dá 'host' aos sites e windows11

     - Criar um ficheiro do Typo (A) para referenciar a um IP (!NOTA: é necessário ativar a reverse lookup zone para poder escolher a opção -> "Create associated pointer (PTR) record")
       PTR é usado para introduzir o nome do site e receber o seu respectivo IP
     - Registo tipo CNAME para associar a um ficheiro Tipo (A) | Isso só se faz quando o ficheiro Type(A) não tem www no primeiro campo(FQND não tem www no inicio)
     - Registo tipo MX: Nome de Host(opcional) -> FQDN: escolher um ficheiro dentro da pasta root de um site(tipo A só acho eu)
    Reverse Loopup Zone:
     - Criar uma nova zona -> next sempre -> Introduzir o IP privado até ao 3ºbyte(no Network ID, ex: 172.31.47)
     - Ao criar um novo PTR: Introduzir o Private IP address e encontrar a pasta root do site(criada no disco C:/) escolhendo o ficheiro do tipo (A) | Isto é também usado para criar stmp(mail system)


 !!!(Se não foi feito antes no ponto 10)Aceder remotamente ao Windows11-A a partir da maquina original (IP ex: 172.31.96.101) PARA PERMITIR ACESSO A NOVOS USERS

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Linux controller with terraform&ansible to create machines in AWS(tudo no terraform_controller):

sudo apt update && sudo apt upgrade -y
sudo apt install net-tools

install terraform
install ansible
install aws cli : https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html

aws configure(only enter the values. the values change with account)
	- aws_access_key_id:ASIAU6GDWVFN6OXR4QX7
	- aws_secret_access_key=M13hLiG21mrS5ValHbSf6us/ztMeqabVou+0QLKH
	
sudo apt install zip
cd .aws/
nano credentials
	-aws_session_token=FwoGZXIvYXdzEDsaDD5yheaveKPBeoZEYCK+AZCLG7svfrZVUv4YS/JkVATusAc76nLoephNjWYAI/igXnTDEciyunJSF0ORDoP4YA20ZGxct8sv9OC7E7V0+tkqTk2JCqjvXYMeOFctLKTC7NBVzXSCVn7HQOy4mo2XKga155X4PPA4lDTjkljkyCCVQXw0niihidwcI80sMnhDZpwJpCw83F71HZFvDtITVm6rNde5LLvv2gCCEsRaxzBkU2pqXeF8gUkjoFv4AheIeyK2Bvg3dYIxOPrfw8Qo/sHMrgYyLf8iSWa5epeDz0uc/u5PMXfU2CRlCFDTxT7HCcCj7HMS1HzSYwXTGI1cUMJX0g==

mkdir terraform
cd terraform
nano provider.tf -> meter as credentials do aws como está no existente(isso liga o terraform á tua aws)

.nano main.tf

terrafrom plan(o que vai fazer quando correr)
terraform apply -> yes (isso vai criar a instance baseada no terraform plan)


ansible -----

nano hosts:
 [servers]
 server1 ansible_host=172.31.7.65
 server2 ansible_host=172.31.0.30
 server3 ansible_host=172.31.2.72
 server4 ansible_host=172.31.3.74
 server5 ansible_host=172.31.8.223
 server6 ansible_host=172.31.1.129


nano ansible.cfg                                                                                            
 [defaults]
 private_key_file = terraform.pem
 ansible_user=ubuntu

 [ssh_connection]
 ssh_args = -o StrictHostKeyChecking=no


nano terraform.pem
 -----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAmALE8AYZnahH7E3k1SNqwLxVEMIKPuinkMN83N9HmRHPGl1V
WfHkylGBPuzD5PsmMj2lde1tfSYQRqyVPKbTNt8DdTeitrZS9hSgh++Mge6tw2Bu
U3ZS5Nxm+jjT4ODIL02k1j+NRmd3aqu+kgqBpg+9IFW77RbIfs1TPECVOhEyA63j
Mk3rS9daKF0DAyrLevhrd5WA2MzU/lMU5AcgoGzHDKEnI8g0N5rf09bPBJ8zDlbj
vcMgq5U5yg60qAEnDRL+zSol24SgRa6I7r4rFIfsqQ1miyvBF2hLqme8aXVdRjbc
RESut7jZiRzS/ougbAnNwbNxbvmkEh6V89m/BQIDAQABAoIBAAGg1fc0OYYEzXBs
jSzzSityWP7q9S0jVNgqH+ZFxgCPvkYsBcQG4UqBgP7pjlefkRMssd8Hggq7I6V+
J8MUjmKiFOlmhSmr3kuggO+z0y95HQdguw3N0Kl+6uN3RF2+SqanEELzP1InvZG4
8TujPSxIMuBryq2JdvBUxrV4g6Cxljt3tPH9AWnanSXp3m1bkIWNyFy203OAMpGh
Oeo98Yye93rKg4Ui0/w5q748rKTdw2pGcM1+qpdMdDOGytQk5xRy85k1P6t0xxae
Ay0tZ5DJ7oGJL6ANYWwjSAKlixBJs2emPTx/A6JQJWDUAHe7x+Niz5mtR9ylR1D3
qDlgNcECgYEAyRwDweoLUo/E3qITh+fVVzZuUv2dFP9GY9yHQIrTb9uZICionvwR
LPLsmkAJ76Es94XmGd7L9Tnfs2S17CkJVigHPMcLyyz5fhI6VVYuSP1sl/WhZjNm
Qi6f+4944eYGX3kJ2X8esyIQwHD3MjXUXHYpHAGCduVzaOz4Kw+qXk0CgYEAwYAe
rLLDLe/Yf7VS1o6Sw1vEeUxRV08T6M65wwnBQm6TbtG9V2qwDi13lRwJFkG/cMLX
O6wa4FWc6N1TjFkj3BJA+5V9lAsB0XbhrbEl23SlbybFSY4bBUjMoowk7kRuX8VI
ZybKCa/+RfVdUKcTTQQ1qwI9i7QjyIxcrxK0b5kCgYB5+nn09cXkT7sy5c8+0Ui+
2w7TW2wZPjQtgaavaQSRhfo8XSzZMT4hqz4C2PCt3W5uu1IzQsUmefHK1zzYfpNh
JGovXPM0SpUQ+HFVLS5pqvxgtuUsHeTaI3l5lS3WpjQbWEi3GLlAIVtTvbDRTYD+
i9SnXesJvmXfsEtdouTMyQKBgQC1jfO6EESHrnoRYV1nSQC1Yj4XnZ7Yb677ijPL
pzR4k22r1gl0ovqrYsfH1TVFd80bDQWLzLCu+kUuTLQehGjcDRiBtcLNDALZuVSI
dyVRIsIyZ0tG95msvKCchygDk5uIKoADoOaCbmoC0/SJPyoh4ihE2uZKVWwZuHEi
J0e7SQKBgEkNaC7q1z0kFcZxWhQQGgzChbzTorA0lH1cztya3AEgNrbd6ajg+gUe
+QMg8GHTPILnCjIiKNgFSzxYiyoy12lvRngbbOFLHxebqHYiHgPfJhHhVnHh3XsL
aDkJyA2BK8hGhzVqLmymPag1lMPB5CdSVCtNisjd6pGToCcAdoaE
-----END RSA PRIVATE KEY-----


nano update_all.yml                                                                                        
---
- name: Update packages and reboot if a new kernel is installed
  hosts: servers
  become: true
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes

    - name: Upgrade all packages
      apt:
        upgrade: dist

    - name: Check if a new kernel is installed
      shell: dpkg-query -W -f='${db:Status-Status}\n' linux-image-$(uname -r) | grep -qE '^install'
      register: new_kernel_installed
      changed_when: new_kernel_installed.stdout == 'install'

    - name: Reboot if a new kernel is installed
      reboot:
        reboot_timeout: 600
      when: new_kernel_installed.changed



ansible all -i hosts -m ping (to ping all hosts in the 'hosts' file | the hosts file can't have white spaces around the '=')

nano print_hostname.yml -> meter o que está lá
ansible-playbook -i hosts print_hostname.yml
ansible-playbook -i hosts update_all.yml






--------------------------------------------------------------------------------------------

terraform to create aws:

install aws via curl

change the aws config and credentials:
 1) ./aws -> nano config:
[default]
region = us-east-1
output = json

[profile vocareum] -> este profile é criado 
region = us-east-1
output = json
source_profile = default
		
 2) ./aws -> nano credentials:
[default]
aws_access_key_id=ASIAU6GDWVFNZNBAHGYL
aws_secret_access_key=HRWy4ojia/hYUH/A5vNtmUjFXtzOQ8dmlUN4C+Lg
aws_session_token=FwoGZXIvYXdzEJP//////////wEaDKrgyaHVBywkqwIgSSK+Af52dQmPAmrnD7dUG/zPBYMM4PCpbl7c20jxa/Qm2SHLaLJfz2SumDFD/vqYLr8Uf>

[vocareum]
aws_access_key_id=ASIAU6GDWVFNZNBAHGYL
aws_secret_access_key=HRWy4ojia/hYUH/A5vNtmUjFXtzOQ8dmlUN4C+Lg
aws_session_token=FwoGZXIvYXdzEJP//////////wEaDKrgyaHVBywkqwIgSSK+Af52dQmPAmrnD7dUG/zPBYMM4PCpbl7c20jxa/Qm2SHLaLJfz2SumDFD/vqYLr8Uf>



install terraform and do -> cp terraform /usr/local/bin

dentro da pasta do security_onion_jackdaniels/cybersecurity no terminal(pode ser o intelij ou terminal normal):
  1)terraform init
  2)terraform plan -> pass que eu quizer para as maquinas
  3)terraform apply -> inserir as passwords criadas no terraform plan (o professor percisa de ter partilhado as AMIs primeiro)


!! criar uma key (ciberops.pub) e meter a chave ssh no ficheiro:
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCogjyCjjcfbBEwMS6EvJwjHu4PRScWnFzEWi1THN1+5NczlRCsqsAk/ZPSOjsVSbbkkSKVKkfC9wjihoJZntaNPgHMIpGPOomvRatpEsDffbIGWY8YTJMoZsiWKkFYDnYL1CzGJ5aUc8H/gQNV5mlxHYY+oTQr259XjADtrmRpRyQw5tpDUf1CfU8gR8r1H+1KJbzczLV8DWa9gkz/1bEEYV8EEocicd9+gMWhAx0mwDUFwtYmTowBTOvN6Dl1OEsk3qMemtuzPU4CuX3qBuaPTxQiplHhaIl3O5oYJqyTuTU6TTAbimACpbXdtMpIJcIPS4g5skC//+EXEJO7qWTX ciberseguranca@nexus-desktop
